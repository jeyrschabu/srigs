apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'groovy'

apply plugin: 'com.moowork.grunt'
apply plugin: 'com.moowork.node'

targetCompatibility = JavaVersion.VERSION_1_8
sourceCompatibility = JavaVersion.VERSION_1_8

group 'com.rooftopcoder.web'
version '1.0'

repositories {
    maven  {
        url "http://repo1.maven.org/maven2"
    }
}


dependencies {
    compile group: 'commons-io',                name: 'commons-io',                 version: '2.4'
    compile group: 'org.apache.commons',        name: 'commons-lang3',              version: '3.1'
    compile group: 'com.google.code.gson',      name: 'gson',                       version: '2.3.1'
    compile group: 'com.google.guava',          name: 'guava',                      version: '18.0'
    compile group: 'commons-httpclient',        name: 'commons-httpclient',         version: '3.1'
    compile group: 'org.apache.httpcomponents', name: 'httpclient',                 version: '4.3'
    compile group: 'org.apache.httpcomponents', name: 'httpmime',                   version: '4.3.3'
    compile group: 'javax.jcr',                 name: 'jcr',                        version: '2.0'
    compile group: 'org.mongodb',               name: 'mongo-java-driver',          version: '3.0.0'
    compile group: 'org.aeonbits.owner',        name: 'owner',                      version: '1.0.6'
    compile group: 'org.slf4j',                 name: 'slf4j-api',                  version: '1.7.10'
    compile group: 'ch.qos.logback',            name: 'logback-classic',            version: '1.1.3'
    compile group: 'ch.qos.logback',            name: 'logback-core',               version: '1.1.3'
    compile group: 'org.codehaus.groovy',       name: 'groovy-all',                 version: '2.4.1'
    compile group: 'org.mongodb.morphia',       name: 'morphia',                    version: '1.1.0'
    compile(group: 'com.sparkjava',             name: 'spark-core',                 version: '2.3'){
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }

    testCompile(
            [ group: 'org.spockframework',          name: 'spock-core',                 version: '1.0-groovy-2.4' ],
            [ group: 'org.hamcrest',                name: 'hamcrest-core',              version: '1.3' ], // only necessary if Hamcrest matchers are used
    )
    runtime "cglib:cglib:2.2.2"
    testRuntime "cglib:cglib-nodep:3.1"         // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:2.1"   // allows mocking of classes without default constructor (together with CGLIB)
}

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath 'com.moowork.gradle:gradle-grunt-plugin:0.10'
        classpath 'com.moowork.gradle:gradle-node-plugin:0.8'
        classpath 'com.sourcemuse.gradle.plugin:gradle-mongo-plugin:0.8.0'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

npmInstall {
    outputs.upToDateWhen {
        false
    }
}

nodeSetup {
    outputs.upToDateWhen { false }
}

installGrunt {
    outputs.upToDateWhen { false }
}

npmSetup {
    outputs.upToDateWhen { false }
}

grunt_build.dependsOn 'installGrunt', 'npmInstall'

configurations {
    remoteSources {
        transitive false
    }
}

war {
    dependsOn grunt_build
    baseName = 'shadow-rigs'
}

dependencies {
    remoteSources 'com.github.jsimone:webapp-runner:8.0.24.0'
}

task stage(dependsOn: ['cleanNodeModules','prepareWebRunner','war'])

task prepareWebRunner(type: Copy) {
    from configurations.remoteSources
    into "${project.buildDir}/libs"
    rename {
        'web-runner.jar'
    }
}

task cleanNodeModules(type: Exec) {
    commandLine 'rm', '-rf', './node_modules'
}

